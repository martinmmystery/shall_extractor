# GitHub Actions workflow to build an EXE using PyInstaller

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      shell: pwsh  # Explicitly use PowerShell
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if (Test-Path "requirements.txt") { pip install -r requirements.txt }
        pip install PyMuPDF nltk pyinstaller

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Build EXE
      run: |
        pyinstaller --onefile main.py
        # Creates main.exe in the dist/ folder

    - name: Upload artifact
      uses: actions/upload-artifact@v4  # Updated to v4
      with:
        name: exe-dist
        path: dist

    - name: Test with pytest (optional)
      run: pytest
      continue-on-error: true  # Allows the workflow to continue even if pytest fails
